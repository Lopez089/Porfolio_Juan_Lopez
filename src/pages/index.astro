---
import About from "@section/about.astro";
import Header from "@section/header.astro";
import Hero from "@section/hero.astro";
import Proyectos from '../section/proyecto.astro'
import Cta from "@components/Cta.astro";
import Footer from "@components/footer.astro";
import Layout from "src/layout/layout.astro";
---
<Layout title="Diseño de sitios web personalizados para negocios| Juan Lopez" description='Diseño de sitios web personalizados para negocios. Soluciones a medida y sin complicaciones. Pide tu presupuesto sin compromiso hoy mismo'>
  <Header />
  <Hero />
  <section>
    <About />
    <Proyectos/> 
    <div class="flex justify-center">
      <hr class="w-1/3">
    </div>
    <Cta/>
  </section>
  <Footer/>
</Layout>
<script>
   
  
  // Selectores
    const $ = (selector:string):any => {
      return window.document.querySelector(selector)
    }
    
    const iconMenu = $('#iconMenu')
    const iconClose = $('#iconClose')
    const navContainer = $('#nav-container')
    const proyectInfo = $('#proyectInfo')
    const proyectImage= $('#proyectImage')
    const headerContainer = $('#header-container')
    const header = $('#header')
    
    // Menu
const openMenu = () => {
  iconMenu.classList.add('hidden')
  iconClose.classList.remove('hidden')
  navContainer.classList.remove('hidden')
  navContainer.classList.add('h-screen')
  headerContainer.classList.add('w-full')
  header.classList.add('h-screen')
  headerContainer.classList.add('fixed')
}

const closeMenu = () => {
  iconClose.classList.add('hidden')
  iconMenu.classList.remove('hidden')
  navContainer.classList.add('hidden')
  headerContainer.classList.remove('w-full')
  header.classList.remove('h-screen')
  headerContainer.classList.remove('fixed')
}

iconMenu.addEventListener('click', () => openMenu())
iconClose.addEventListener('click', () => closeMenu())

document.addEventListener('DOMContentLoaded', function () {
  const aboutMeSection = $('#about');
  const avatar = $('#avatar')

//   observer
  const applyAnimation = (element:Element, animation:string) => {

    const observer = new IntersectionObserver((entries) => {
		console.log(entries)
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add(animation);
        }
      });
    });

    observer.observe(element);
  }

  applyAnimation(avatar, 'animate-fadeInLeft')
  applyAnimation(aboutMeSection, 'animate-fadeInRight')
  applyAnimation(proyectInfo, 'animate-fadeInRight')
  applyAnimation(proyectImage, 'animate-fadeInRight')
});

</script>