---
import About from "@section/about.astro";
import Header from "@section/header.astro";
import Hero from "@section/hero.astro";
import Proyectos from '../section/proyecto.astro'
import Cta from "@components/Cta.astro";
import Footer from "@components/footer.astro";
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Dosis:wght@200..800&family=Source+Sans+3:ital,wght@0,200..900;1,200..900&display=swap"
			rel="stylesheet"
		/>
		<link
			rel="stylesheet"
			href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"
		/>
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body class="font-sans text-black">
		<Header />
		<Hero />
		<About />
		<Proyectos/> 
		<Cta/>
		<Footer/>
	</body>
</html>

<script>
// Selectores
const $ = (selector:string):any => {
	return window.document.querySelector(selector)
}

const iconMenu = $('#iconMenu')
const iconClose = $('#iconClose')
const nav = $('#nav')
const navContainer = $('#nav-container')
const proyectInfo = $('#proyectInfo')
const proyectImage= $('#proyectImage')

// Menu
const openMenu = () => {
  iconMenu.classList.add('hidden')
  iconClose.classList.remove('hidden')
  navContainer.classList.remove('hidden')
  navContainer.classList.add('absolute', 'h-screen', 'w-full', 'top-0', 'left-0')
}

const closeMenu = () => {
  iconClose.classList.add('hidden')
  iconMenu.classList.remove('hidden')
  navContainer.classList.add('hidden')
}

iconMenu.addEventListener('click', () => openMenu())
iconClose.addEventListener('click', () => closeMenu())

document.addEventListener('DOMContentLoaded', function () {
  const aboutMeSection = $('#about');
  const avatar = $('#avatar')

//   observer
  const applyAnimation = (element:Element, animation:string) => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add(animation);
        }
      });
    });

    observer.observe(element);
  }

  applyAnimation(avatar, 'animate-fadeInLeft')
  applyAnimation(aboutMeSection, 'animate-fadeInRight')
  applyAnimation(proyectInfo, 'animate-fadeInRight')
  applyAnimation(proyectImage, 'animate-fadeInRight')
});

</script>